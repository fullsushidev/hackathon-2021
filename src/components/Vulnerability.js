import React, { useContext, useEffect, useState } from 'react';
import { View, Dimensions, Text } from 'react-native';
import { authFetch } from '../utils/api';
import { LoginContext, ThemeContext } from '../utils/contexts';
import {
  BarChart,
} from 'expo-chart-kit'
import white from '@patternfly/react-tokens/dist/js/global_palette_white';

const colorMapper = {
  Critical: '',
  Important: '',
  Moderate: '',
  Low: ''
};

const Vulnerability = ({ systemId }) => {
  const [data, setData] = useState();
  const config = useContext(LoginContext);
  const { text } = useContext(ThemeContext);
  useEffect(() => {
    (async () => {
      const { data } = await authFetch(
        `/api/vulnerability/v1/systems/${systemId}/cves?page_size=999`,
        config
      );
      const mapped = data?.reduce((acc, { attributes, type, id }) => ({
        ...acc,
        [attributes?.impact]: [
           ...acc?.[attributes?.impact] || [],
            { type, id, attributes }
        ]
      }), {})
      setData(Object.entries(mapped || {}).reduce((acc, [ key, val ]) => ({ ...acc, [key]: val.length }), {}));
    })()
  }, []);
  return <View style={{
    marginTop: 10,
    paddingLeft: 10,
    paddingRight: 10,
    backgroundColor: white.value
  }}>
    <Text style={text}>Cves on system</Text>
    <BarChart
        data={{
          labels: Object.keys(colorMapper),
          datasets: [
            {
              data: Object.keys(colorMapper).map((key) => data?.[key] || 0),
            },
          ],
        }}
        width={Dimensions.get('window').width - 20}
        height={220}
        chartConfig={{
          backgroundColor: '#1cc910',
          backgroundGradientFrom: '#eff3ff',
          backgroundGradientTo: '#efefef',
          decimalPlaces: 0,
          color: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,
          style: {
            borderRadius: 16,
          },
        }}
        style={{
          marginVertical: 8,
          borderRadius: 16,
        }}
      />
  </View>
}

export default Vulnerability;
