import React, { useContext, useEffect, useState } from 'react';
import { View, Dimensions, Text } from 'react-native';
import { authFetch } from '../utils/api';
import { LoginContext, ThemeContext } from '../utils/contexts';
import {
  PieChart,
} from 'expo-chart-kit'
import white from '@patternfly/react-tokens/dist/js/global_palette_white';
import { Fragment } from 'react';

const colorMapper = {
  Critical: 'rgba(201, 25, 11, 0.6)',
  Important: 'rgba(	236, 122, 8, 0.6)',
  Moderate: 'rgba(240, 171, 0, 0.6)',
  Low: 'rgba(115, 188, 247, 0.6)'
};

const Vulnerability = ({ systemId }) => {
  const [data, setData] = useState();
  const config = useContext(LoginContext);
  const { text } = useContext(ThemeContext);
  useEffect(() => {
    (async () => {
      const { data } = await authFetch(
        `/api/vulnerability/v1/systems/${systemId}/cves?page_size=999`,
        config
      );
      const mapped = data?.reduce((acc, { attributes, type, id }) => ({
        ...acc,
        [attributes?.impact]: [
           ...acc?.[attributes?.impact] || [],
            { type, id, attributes }
        ]
      }), {})
      setData(Object.entries(mapped || {}).reduce((acc, [ key, val ]) => ({ ...acc, [key]: val.length }), {}));
    })()
  }, []);
  return <View style={{
    marginTop: 10,
    paddingLeft: 10,
    paddingRight: 10,
    backgroundColor: white.value
  }}>
    {(data &&  Object.keys(data).length === 0) ? <Text style={text}>
      There are no Sves applicable to this system!
    </Text> : <Fragment>
      <Text style={text}>Cves on system</Text>
      <PieChart
          data={
            Object.entries(colorMapper).map(([key, color]) => ({
              name: key,
              value: data?.[key] || 0,
              legendFontColor: '#7F7F7F',
              legendFontSize: text.fontSize,
              color
            }))
          }
          width={Dimensions.get('window').width - 20}
          height={220}
          chartConfig={{
            backgroundColor: '#1cc910',
            backgroundGradientFrom: '#eff3ff',
            backgroundGradientTo: '#efefef',
            decimalPlaces: 0,
            color: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,
            style: {
              borderRadius: 16,
            },
          }}
          accessor="value"
          backgroundColor="rgba(239, 243, 255, 1)"
          style={{
            marginVertical: 8,
            borderRadius: 16,
          }}
        />
    </Fragment>}
  </View>
}

export default Vulnerability;
